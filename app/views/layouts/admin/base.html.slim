doctype html
html
  head
    title
      | リザルト -管理画面
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload'
    = javascript_include_tag 'application', 'data-turbolinks-track': 'reload'
    = favicon_link_tag('icon.jpg')
  body
    .ui.inverted.stackable.segment
      .ui.huge.inverted.menu
        = link_to 'HOME', admin_root_path, class: 'ui item'
        .ui.dropdown.item
          i.flag.icon
          | 大会
          i.dropdown.icon
          .menu
            = link_to '一覧', admin_tournaments_path, class: 'ui inverted item'
            = link_to '新規作成', new_admin_tournament_path, class: 'ui item'
        .ui.dropdown.item
          | 短距離
          i.dropdown.icon
          .menu
            = link_to '一覧', admin_short_results_path, class: 'ui item'
            = link_to '新規作成', new_admin_short_result_path, class: 'ui item'
        .ui.dropdown.item
          | 長距離
          i.dropdown.icon
          .menu
            = link_to '一覧', admin_long_results_path, class: 'ui item'
            = link_to '新規作成', new_admin_long_result_path, class: 'ui item'
        .ui.dropdown.item
          | フィールド
          i.dropdown.icon
          .menu
            = link_to '一覧', admin_field_results_path, class: 'ui item'
            = link_to '新規作成', new_admin_field_result_path, class: 'ui item'
        .ui.dropdown.item
          | リレー
          i.dropdown.icon
          .menu
            = link_to '一覧', admin_relay_results_path, class: 'ui item'
            = link_to '新規作成', new_admin_relay_result_path, class: 'ui item'
        .ui.dropdown.item
          i.user.icon
          | 選手
          i.dropdown.icon
          .menu
            = link_to '一覧', admin_athletes_path, class: 'ui item'
            = link_to '新規作成', new_admin_athlete_path, class: 'ui item'
        = link_to admin_destroy_session_path, method: :delete, class: 'ui right item' do
          i.sign.out.icon
          | ログアウト

    .ui.stackable.admin.segment
      - if flash.present?
        .ui.positive.message
          - flash.each do |key, value|
            = content_tag(:div, value, class: "#{key}")
      == yield
